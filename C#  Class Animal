//
//Animal.cs
//


using System;
using System.Threading;

namespace ConsoleApp1
{
    internal class Animal
    {
        private object lockObject = new object();
        public string Name { get; set; }
        public int LegsCount { get; set; }
        public int Age { get; set; }

        public Animal(string animalname, int totalLegs)
        {
            Name = animalname;
            LegsCount = totalLegs;
        }

        public void DisplayNameAge()
        {
            lock (lockObject)
            {

                Console.WriteLine($"The Name of the animal object is {Name} and its current age is {Age}.");

            }
        }

        public void AgeUpdater()
        {
            lock (lockObject)
            {
                int currentAge = Age;
                Age = currentAge + 1;
            }
        }
    }

}


//
//Program.cs
//


using ConsoleApp1;
using System.Globalization;

namespace ConsoleApp1testesesr
{
    internal class Program
    {
        static void Main(string[] args)
        {
            Animal Dog = new Animal("Dog1", 4);
            Animal Cat = new Animal("Cat1", 4);

            object dogLockObject = new object();
            object catLockObject = new object();

            Thread AgeUpdate1 = new Thread(() => thread1(Dog, Cat, dogLockObject, catLockObject));
            Thread PrintDisplay1 = new Thread(() => thread2(Dog, Cat, dogLockObject, catLockObject));


            AgeUpdate1.Start();
            PrintDisplay1.Start();

            AgeUpdate1.Join();
            PrintDisplay1.Join();

            static void thread1(Animal dog, Animal cat, object dogLockObject, object catLockObject)
            {
                for (int i = 1; i <= 5; i++)
                {
                    lock (dogLockObject)
                    {
                        dog.AgeUpdater();
                    }
                    lock (catLockObject)
                    {
                        cat.AgeUpdater();
                    }
                    Task.Delay(1000).Wait();
                }
            }
            static void thread2(Animal dog, Animal cat, object dogLockObject, object catLockObject)
            {
                for (int j = 1; j <= 5; j++)
                {

                    lock (dogLockObject)
                    {
                        dog.DisplayNameAge();
                    }
                    lock (catLockObject)
                    {
                        cat.DisplayNameAge();
                    }
                    Task.Delay(1200).Wait();

                }
            }
        }
    }
}


